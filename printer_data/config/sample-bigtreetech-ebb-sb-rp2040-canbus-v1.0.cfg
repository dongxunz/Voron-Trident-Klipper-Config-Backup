# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# RP2040 with "USB" or "CAN bus (on gpio4/gpio5)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45474150538C24DA-if00
#canbus_uuid: 959ee084d3ac

#[temperature_sensor EBB_NTC]
#sensor_type: Generic 3950
#sensor_pin: EBBCan:gpio28

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
rotation_distance: 22.340
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio27
#smooth_time: 1.0
#   A time value (in seconds) over which temperature measurements will
#   be smoothed to reduce the impact of measurement noise. The default
#   is 1 seconds.
control: pid
pid_Kp: 35.097
pid_Ki: 3.343
pid_Kd: 92.125
min_extrude_temp: 170
max_power: 1.0
min_temp: 0
max_temp: 300

#[verify_heater extruder]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 3
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

# sensor_type: MAX31865
# sensor_pin: EBBCan:gpio9
# spi_software_sclk_pin: EBBCan:gpio10
# spi_software_mosi_pin: EBBCan:gpio8
# spi_software_miso_pin: EBBCan:gpio11
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
interpolate: False
run_current: 0.5
# hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0
# stealthchop_threshold: 999999

#####################################################################
# 	Fan Control
#####################################################################

[fan]
pin: EBBCan:gpio13
shutdown_speed: 1.0

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 40
#fan_speed: 0.1
shutdown_speed: 1.0

[temperature_fan EBB_fan]
pin: EBBCan:gpio6
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28
cycle_time: 0.010
hardware_pwm: False
control: watermark
min_temp: -15
max_temp: 80
min_speed: 0.2
target_temp: 50

#[fan_generic 4W_FAN0]
#pin: EBBCan:gpio15
#tachometer_pin: EBBCan:gpio12
#tachometer_ppr: 1

#####################################################################
# 	LED Control
#####################################################################

#[neopixel hotend_rgb]
#pin: EBBCan:gpio16

#[bltouch]
#sensor_pin: ^EBBCan:gpio21
#control_pin: EBBCan:gpio22

#####################################################################
# 	Probe
#####################################################################

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan:gpio6

[probe]
pin: EBBCan:gpio22
x_offset: 0
y_offset: 22
z_offset: 3
speed: 5
samples:3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

[bed_mesh]
speed: 100
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210
#zero_reference_position: 125,125 #for use with stock z endstop

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
#zero_reference_position: 150,150 #for use with stock z endstop

##	Uncomment for 350mm build
mesh_min: 25, 25
mesh_max: 320,320
zero_reference_position: 175,175 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 9,9 # Values should be odd, so one point is directly at bed center
algorithm: bicubic

