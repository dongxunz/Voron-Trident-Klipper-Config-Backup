# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.

#####################################################################
#   UUID Setting
#####################################################################

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_3A002A000951313339373836-if00
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_140025000351323434383633-if00
#canbus_uuid: b4689532c8d1

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 15
max_z_accel: 350
square_corner_velocity: 5.0

######################################################################
# Temperature Sensor
######################################################################

#[temperature_sensor MCU_Temp]
#sensor_type: temperature_mcu

#[temperature_sensor SOC_Temp]
#sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

# X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 32
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^EBBCan:gpio24
position_min: 0

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

#	Uncomment for 350mm build
position_endstop: 350
position_max: 350

homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

## Motor1
[tmc2209 stepper_x]
uart_pin: PC13
#diag_pin: PF4
interpolate: False
run_current: 0.800
sense_resistor: 0.110
stealthchop_threshold: 0

## Motor1
#[tmc2130 stepper_x]
#cs_pin: PC13
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
##diag1_pin: PF4
#run_current: 0.800
#stealthchop_threshold: 999999

# Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
microsteps: 32
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PF4
position_min: 0

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

#	Uncomment for 350mm build
position_endstop: 350
position_max: 350

homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

## Motor2
[tmc2209 stepper_y]
uart_pin: PE3
#diag_pin: PF3
interpolate: False
run_current: 0.800
sense_resistor: 0.110
stealthchop_threshold: 0

## Motor2
#[tmc2130 stepper_y]
#cs_pin: PE3
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
##diag1_pin: PF3
#run_current: 0.800
#stealthchop_threshold: 999999

#####################################################################
# 	Z Stepper Settings
#####################################################################

# Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0
microsteps: 32
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8
endstop_pin: ^PF3
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
## All builds use same Max Z
#position_endstop: 0
position_max: 245
position_min: -5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

# Motor3
[tmc2209 stepper_z]
uart_pin: PB9
##diag_pin: PF2
interpolate: True
run_current: 0.800
sense_resistor: 0.110
stealthchop_threshold: 0

## Motor3
#[tmc2130 stepper_z]
#cs_pin: PB9
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
##diag1_pin: PF2
#run_current: 0.650
#stealthchop_threshold: 999999

## Z1 Stepper - Back on Motor4
# The M8P only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
microsteps: 32
#endstop_pin: ^PF1
rotation_distance: 8

## Motor4
[tmc2209 stepper_z1]
uart_pin: PB5
##diag_pin: PF1
interpolate: True
run_current: 0.800
sense_resistor: 0.110
stealthchop_threshold: 0

## Motor4
#[tmc2130 stepper_]
#cs_pin: PB5
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
##diag1_pin: PF1
#run_current: 0.800
#stealthchop_threshold: 999999

# Z2 Stepper - Right Front on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
microsteps: 32
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8

## Motor5
[tmc2209 stepper_z2]
uart_pin: PG14
#interpolate: True
run_current: 0.800
sense_resistor: 0.110
stealthchop_threshold: 0

## Motor5
#[tmc2130 extruder]
#cs_pin: PG14
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor6
#[extruder1]
#step_pin: PG9
#dir_pin: PD7
#enable_pin: !PG11 
#heater_pin: PA1 # HE1 
#sensor_pin: PC5 # T1
#...

# Motor6
#[tmc2209 stepper_]
#uart_pin: PG10
#interpolate: True
#run_current: 0.800
#sense_resistor: 0.110
#stealthchop_threshold: 0

## Motor6
#[tmc2130 extruder1]
#cs_pin: PG10
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor7
#[extruder2]
#step_pin: PD4
#dir_pin: PD3
#enable_pin: !PD6
#heater_pin: PA3 # HE2
#sensor_pin: PC4 # T2
#...

## Motor7
#[tmc2209 extruder2]
#uart_pin: PD5
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor7
#[tmc2130 extruder2]
#cs_pin: PD5
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor8
#[extruder3]
#step_pin: PC7
#dir_pin: PC8
#enable_pin: !PD2
#heater_pin: PA5 # HE3
#sensor_pin: PA7 # T3
#...

## Motor8
#[tmc2209 extruder3]
#uart_pin: PC6
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor8
#[tmc2130 extruder3]
#cs_pin: PC6
#spi_software_mosi_pin: PG6
#spi_software_miso_pin: PG7
#spi_software_sclk_pin: PG8
#run_current: 0.800
#stealthchop_threshold: 999999

# Motor9
#[stepper_t1]
#step_pin: PF12
#dir_pin: !PF11
#enable_pin: !PF13
#microsteps: 32
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
#rotation_distance: 8

# Motor10
#[stepper_t2]
#step_pin: PE8
#dir_pin: !PE7
#enable_pin: !PE10
#microsteps: 32
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
#rotation_distance: 8

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB 
sensor_type: ATC Semitec 104GT-2
control: pid
pid_Kp: 62.343
pid_Ki: 2.886
pid_Kd: 336.650
min_temp: 0
max_temp: 110

#####################################################################
# 	Fan Control
#####################################################################

## Fan0 (B Motor Fan)
[heater_fan b_motor_fan]
pin: PF7
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: chamber_heater, heater_bed
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 170
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

## Fan1 (A Motor Fan)
[heater_fan a_motor_fan]
pin: PF9
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: chamber_heater, heater_bed
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 170
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

## Fan2 (PTC Heat Fan)
[heater_fan PTC_heat_fan]
pin: PF6
#max_power:
shutdown_speed: 1.0
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: chamber_heater
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 40
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

## Fan3 (TMC Drive Fan)
#[controller_fan TMC_drive_fan]
#pin: PF8
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 0.5
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater: 
#stepper: stepper_x , stepper_y , stepper_z , stepper_z1 , stepper_z2
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

[controller_fan electrical_cool_fan_a]
pin: PF8
#max_power:
shutdown_speed: 1.0
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: chamber_heater, heater_bed
stepper: stepper_x, stepper_y, stepper_z
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

[controller_fan electrical_cool_fan_b]
pin: PA4
#max_power:
shutdown_speed: 1.0
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: chamber_heater, heater_bed
stepper: stepper_x, stepper_y, stepper_z
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

## Fan4 (MCU Fan)
[temperature_fan MCU_fan]
pin: cb1:gpio71
sensor_mcu: mcu
sensor_type: temperature_mcu
cycle_time: 0.010
hardware_pwm: False
control: watermark
min_temp: 0
max_temp: 80
min_speed: 0.2
target_temp: 40

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1

#####################################################################
# PTC Heater
#####################################################################

[temperature_sensor PTC_temp]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PB0
min_temp: -15
max_temp: 200
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

[heater_generic chamber_heater]
gcode_id: PTC Heating...
#   The id to use when reporting the temperature in the M105 command.
#   This parameter must be provided.
heater_pin: PA0
##max_power: 1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC5
#smooth_time:
control: watermark
#pid_Kp: 14.614
#pid_Ki: 0.645
#pid_Kd: 82.749
#pwm_cycle_time:
min_temp: -15
max_temp: 70
#   See the "extruder" section for the definition of the above
#   parameters.

#####################################################################
# Verify Heater
#####################################################################

[verify_heater chamber_heater]
max_error: 300
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 480
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
##hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 1
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

# Set Chamber Temperature
[gcode_macro M141]
gcode:
    SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={params.S|default(0)}

# Wait for Chamber Temperature
[gcode_macro M191]
gcode:
    {% set s = params.S|float %}
    {% if s == 0 %}
        # If target temperature is 0, do nothing
        M117 Chamber heating cancelled
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={s}
        # Orca: uncomment the following line if you want to use heat bed to assist chamber heating
        # M140 S100
        TEMPERATURE_WAIT SENSOR="heater_generic chamber_heater" MINIMUM={s-1} MAXIMUM={s+1}
        M117 Chamber at target temperature
    {% endif %}

#####################################################################
# Case Light
#####################################################################

[output_pin case_light]
pin: PA1
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#value:
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.
#maximum_mcu_duration:
#static_value:
#   These options are deprecated and should no longer be specified.

# Light Control
[gcode_macro lights_OFF]
gcode:
    SET_PIN PIN=case_light VALUE=0
 
[gcode_macro lights_ON]
gcode:
    SET_PIN PIN=case_light VALUE=1

#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PE7, EXP1_2=PG1,
#    EXP1_3=PG0, EXP1_4=PF15,
#    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
#    EXP1_7=PF12, EXP1_8=PF11,
#    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
#    EXP2_1=PE13, EXP2_2=PE12,
#    EXP2_3=PE15, EXP2_4=PE11,
#    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
#    EXP2_7=PE8, EXP2_8=<RST>,
#    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	RepRapDiscount 2004 Smart Controller
#####################################################################

#[display]
#lcd_type: hd44780
#   Set to "hd44780" for hd44780 displays.
#rs_pin: EXP1_4
#e_pin:  EXP1_3
#d4_pin: EXP1_5
#d5_pin: EXP1_6
#d6_pin: EXP1_7
#d7_pin: EXP1_8
#   The pins connected to an hd44780 type lcd. These parameters must
#   be provided.
#click_pin: ^!EXP1_2
#   The pin connected to 'enter' button or encoder 'click'. This
#   parameter must be provided when using menu. The presence of an
#   'analog_range_click_pin' config parameter turns this parameter
#   from digital to analog.
#encoder_pins: ^EXP2_5,^EXP2_3
#   The pins connected to encoder. 2 pins must be provided when using
#   encoder. This parameter must be provided when using menu.
#hd44780_protocol_init: True
#   Perform 8-bit/4-bit protocol initialization on an hd44780 display.
#   This is necessary on real hd44780 devices. However, one may need
#   to disable this on some "clone" devices. The default is True.
#line_length:
#   Set the number of characters per line for an hd44780 type lcd.
#   Possible values are 20 (default) and 16. The number of lines is
#   fixed to 4.
#kill_pin: EXP2_8
#   The pin connected to 'kill' button. This button will call
#   emergency stop. The presence of an 'analog_range_kill_pin' config
#   parameter turns this parameter from digital to analog.

# See More: 
# https://www.klipper3d.org/Config_Reference.html?h=lcd#hd44780-display
# https://www.bilibili.com/read/cv23403862/

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 300
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:175,175
#speed:100
#z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

## Uncomment below for 250mm build
#z_positions:
#    -50, 18
#    125, 298
#    300, 18
#points:
#    30, 5
#    125, 195
#    220, 5

## Uncomment below for 300mm build
#z_positions:
#   -50, 18
#   150, 348
#   350, 18
#points:
#   30, 5
#   150, 245
#   270, 5

## Uncomment below for 350mm build
z_positions:
   -50, 18
   175, 398
   400, 18
points:
   30, 5
   175, 295
   320, 5

speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

#[adxl345]
#cs_pin: PA15
#spi_bus: spi3a

#[bltouch]
#sensor_pin: PD13
#control_pin: PD12

## Proximity switch
#[probe]
#pin: PD8

#[output_pin ps_on_pin]
#pin: PD14

#[neopixel led_rgb]
#pin: PD15
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count: 18
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRBW
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.


#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

# enable M118, print text to console.
[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    #	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

[gcode_macro PARAM_TEST]
variable_material: ''
gcode:
    {% set MATERIAL=params.MATERIAL|default("PLA")|string %}
    {% set BED_TEMP=params.BED_TEMP|default(60)|float %} #get bed temp setting from cura
    {% set EXTRUDER_TEMP=params.EXTRUDER_TEMP|default(190)|float %} #get extruder temp from cura

    RESPOND TYPE=command MSG='Mat: {MATERIAL}'
    RESPOND TYPE=command MSG='Bed: {BED_TEMP}'
    RESPOND TYPE=command MSG='Ext: {EXTRUDER_TEMP}'

    SET_GCODE_VARIABLE MACRO=PARAM_TEST VARIABLE=material VALUE='"MATERIAL"' ; Save the material type to a variable just because
    {% if material == "PLA" %} # If material type is PLA
        BED_MESH_PROFILE LOAD=<PLA60> # Load bed mesh
    {% elif material == "PETG" %} # If material type is PETG
        BED_MESH_PROFILE LOAD=<PETG80> # Load bed mesh
    {% elif material == "ABS" %} # If material type is ABS
        BED_MESH_PROFILE LOAD=<ABS90> # Load bed mesh
    {% else %} # If any other material type
        BED_MESH_PROFILE LOAD=<default> # Load default bed mesh
    {% endif %}

######################################################################
# Set Material
######################################################################

# https://github.com/rootiest/zippy_guides/blob/main/resources/SET_MATERIAL.cfg

## Set Material-specific Configs
## 
## Add this immediately after your start_print line of the start gcode in Prusa/SuperSlicer:
##     SET_MATERIAL MATERIAL='{filament_type[initial_extruder]}'
## 
## Add this immediately after your start_print line of the start gcode in Cura:
##     SET_MATERIAL MATERIAL='{material_type}'
## 

[gcode_macro SET_MATERIAL]
description: Set values based on material type
# variable_material: ''
gcode:
    # SET_GCODE_VARIABLE MACRO=SET_MATERIAL VARIABLE=material VALUE={MATERIAL} ; Save the material type to a variable just because
    {% if MATERIAL == 'PLA' %} # If material type is PLA
        BED_MESH_PROFILE LOAD=<PLA60> # Load bed mesh
    {% elif MATERIAL == 'PETG' %} # If material type is PETG
        BED_MESH_PROFILE LOAD=<PETG80> # Load bed mesh
    {% elif MATERIAL == 'ABS' %} # If material type is ABS
        BED_MESH_PROFILE LOAD=<ABS90> # Load bed mesh
    {% else %} # If any other material type
        BED_MESH_PROFILE LOAD=<default> # Load default bed mesh
    {% endif %}

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

## Copyright (C) 2023 Chris Laprade
## 
## This file is part of zippy_config.
## 
## zippy_config is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## zippy_config is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with zippy_config.  If not, see <http://www.gnu.org/licenses/>.

[gcode_macro INTRO_LINE]
gcode:
    # 划线清理（左边延Y轴划线）
    #G90                          # 绝对定位
    #G1 X20 Y100 Z0.2 F2400       # 第一条线开始点
    #G1 Y200 F2400 E15            # 第一条线结束点
    #G1 X25 F2400                 # 第二条线开始点
    #G1 Y100 F2400 E15            # 第二条线结束点
    #G1 Z5 F2400                  # 抬升

    # 划线清理（前面延X轴划线）
    G90                          # 绝对定位
    G1 X15 Y0 Z0.2 F2400         # 第一条线开始点
    G1 X115 F2400 E15            # 第一条线结束点
    G1 Y3 F2400                  # 第二条线开始点
    G1 X15 F2400 E15             # 第二条线结束点
    G1 Z5 F2400                  # 抬升

[gcode_macro START_PRINT]
gcode:
    #G32                            ; home all axes
    #G1 Z20 F3000                   ; move nozzle away from bed
    #--------------------------------------------------------------------

    #{% set bed_temp = params.BED|float %}
    #{% set hotend_temp = params.EXTRUDER|float %}

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set MATERIAL = params.MATERIAL|default('PLA')|string %} ; Get material type from slicer

    RESPOND TYPE=command MSG='Mat: {MATERIAL}'
    RESPOND TYPE=command MSG='Bed: {BED_TEMP}'
    RESPOND TYPE=command MSG='Ext: {EXTRUDER_TEMP}'
    
    M109 S170                       # 预热热端
    M190 S{BED_TEMP}                # 设置热床温度并等待
    G92 E0                          # 重置挤出机
    BED_MESH_CLEAR                  # 卸载网床
    G28                             # 归位所有轴
    Z_TILT_ADJUST                   # 龙门架调平
    #CALIBRATE_Z                    # 自动校准Z
    #SET_MATERIAL                   # 根据耗材类型加载网床
    BED_MESH_PROFILE LOAD="ABS90"   # 加载ABS网床
    #BED_MESH_PROFILE LOAD="PETG80" # 加载PETG网床
    #G28 Z                           # 归位Z轴
    #G0 X175 Y175 Z30
    # UPDATE_DELAYED_GCODE ID=Warehouse_temperature DURATION=300          # 等待仓温，延迟5分钟（打印ABS）
    M109 S{EXTRUDER_TEMP}           # 设置热端温度并等待
    # clean_nozzle                  # 喷嘴清洁
    #G0 X175 Y175 Z30 F3600
    #G1 Z20 F3000                   # 将喷嘴移离热床

    #STATUS_BUSY

    INTRO_LINE                      # 划线清理

[gcode_macro END_PRINT]
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           # wait for buffer to clear
    G92 E0                         # zero the extruder
    G1 E-1.5 F3600                 # retract filament
    G91                            # relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    # move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           # turn off fan
    G1 Z3 F3000                    # move nozzle up 3mm
    G90                            # absolute positioning
    G0 X30 Y30 F3600              # park the nozzle at the front left
    BED_MESH_CLEAR
    M191 S0
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro CHAMBER_TEMP_WAIT]
gcode:
  {% if params.MIN_TEMPERATURE and params.MAX_TEMPERATURE and params.MIN_TEMPERATURE|float > params.MAX_TEMPERATURE|float %}
    {action_raise_error("Chamber Temp Wait: MIN_TEMPERATURE must be less than or equal to MAX_TEMPERATURE
                         Use: 
                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80]
                         - CHAMBER_TEMP_WAIT MAX_TEMPERATURE=[0..80]
                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80] MAX_TEMPERATURE=[0..80]")}
  {% elif params.MIN_TEMPERATURE and params.MIN_TEMPERATURE|float > -1 and params.MIN_TEMPERATURE|float < 81 %}
    {% if params.MAX_TEMPERATURE and params.MAX_TEMPERATURE|float > -1 and params.MAX_TEMPERATURE|float < 81 %}
      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM={params.MIN_TEMPERATURE|float} MAXIMUM={params.MAX_TEMPERATURE|float}
    {% else %}
      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM={params.MIN_TEMPERATURE|float}
    {% endif %}
  {% elif params.MAX_TEMPERATURE and params.MAX_TEMPERATURE|float > -1 and params.MAX_TEMPERATURE|float < 81 %}
      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MAXIMUM={params.MAX_TEMPERATURE|float}
  {% else %}
    {action_raise_error("Chamber Temp Wait: invalid usage
                         Use: 
                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80]
                         - CHAMBER_TEMP_WAIT MAX_TEMPERATURE=[0..80]
                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80] MAX_TEMPERATURE=[0..80]")}
  {% endif %}
  
